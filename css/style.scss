@mixin mobile {
  @media screen and (max-width:769px) {
    @content;
  }
}

$pdg: 16px;
$br: 8px;
$pfSize: 40px;
$leftWidth: 400px;
$leftHeight: 80%;

@mixin boxDetail($radius: $br, $padding: $pdg) {
  border-radius: $radius;
  padding: $padding;
}

@mixin msgArrow($position: 'left') {
  content: '';
  display: block;
  width: 0; height: 0;
  border: 15px solid white;
  border-radius: $br;
  border-left-color: transparent;
  border-right-color: transparent;
  border-bottom-color: transparent;
  position: absolute;
  @if $position == 'left' {
    left: -10px;
  } @else if $position == 'right' {
    left: unset;
    right: -10px;
  }
  top: 6px;
  z-index: -1;
}


*,
*::before,
*::after {
  box-sizing: border-box;
}
html, body {margin:0;padding:0;height:100%;}
//ul,ol {padding: 0;}

body {
  display: flex;
  justify-content: center;
  margin: 0;
  position: relative;
  //@include mobile() {flex-direction: column;}
  .title {
    text-align: center;
    h1 {font-size: 20px;color: #633C14;}
    p {font-size: 14px; margin: 0;}
  }
  > section {
    padding: $pdg;
    gap: $pdg;
    height: 100%;
    //@include mobile {width: 100%;}
    &:nth-child(1) {position: fixed; top:0;left:0;z-index:999;}
    &:nth-child(2) {margin-left: $leftWidth; }

    &.typeArea {
      display: flex;
      flex-direction: column;
      background-color: #F9DF03; 
      width: $leftWidth;
    }
    &.output {
      //padding: 20px;
      box-sizing: content-box;
      background-color: #ffffff;
      width: $leftWidth;
    }
    &.setting {
      background-color: #ffffff;
      width: calc(100% - ($leftWidth * 2));
    }
  }
  textarea {
    display: flex;
    width: 100%;
    border: 0;
    @include boxDetail;
    font-family: Arial, Helvetica, sans-serif;
    min-height: $leftHeight;
  }
  button {
    height: calc($leftHeight - 50px);
    @include boxDetail();
    border: 0;
    background-color: #633C14;
    color: white;
    cursor: pointer;
    position: relative;
    will-change: transform;
    transition: all .3s;
    &:hover {
      transform: scale(0.95);
    }
  }
}


.output {
  #output {
    min-height: 50%;
    font-size: 14px;
    background-color: #B2C7D9;
    position: relative;
    @include boxDetail;
    box-shadow: 0 0 20px #a9a9a9;
  }
  //&::before, &::after {
  //  content: '';
  //  display: block;
  //}
  //&::before {
  //  background: red;
  //  width: 100%;
  //  height: 20px;
  //  border-radius: 6px 6px 0 0;
  //  //position: absolute; top: 0;left: 0;
  //}
}

.name {
  display: flex;
  gap: 12px;
  width: 100%;
  &:not(:first-child){padding-top:24px;}
  &:not(.right)::before{
    content: '';
    display: flex;
    width: $pfSize; height: $pfSize;
    background: var(--color-before, blue) no-repeat center center / cover;
    border-radius: $pdg;
    margin-top: -4px;
  }
  &.right {
    color: transparent;
  }
}

.texts {
  display: flex;
  flex-direction: column;
  gap: $br;
  margin-left: calc($pfSize + 12px);
  margin-top: calc(4px - $pdg);
  p {
    background: white;
    @include boxDetail(4px, 10px);
    margin: 0;
    width: max-content;
    position: relative;
    z-index: 0;
    &:first-child:not(.endLine)::before {
      @include msgArrow(left);
    }
  }
  > div {
    display: flex;
    align-items: flex-end;
    gap: $br;
    span { font-size:12px;}
  }
  &.right {
    align-items: flex-end;
    > div{flex-direction:row-reverse}
    p:first-child::before { @include msgArrow('right')}
  }
}

#buttons {
  display: flex;
  gap: $br;
}

label {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
}

fieldset {
  border: none;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}
[type="checkbox"] {
  appearance: none;
  position: relative;
  border: max(2px, 0.1em) solid gray;
  border-radius: 1.25em;
  width: 2.25em;
  height: 1.25em;
}

[type="checkbox"]::before {
  content: "";
  position: absolute;
  left: 0;
  width: 1em;
  height: 1em;
  border-radius: 50%;
  transform: scale(0.8);
  background-color: gray;
  transition: left 250ms linear;
}

[type="checkbox"]:checked {
  background-color: rebeccapurple;
  border-color: rebeccapurple;
}

[type="checkbox"]:checked::before {
  background-color: white;
  left: 1em;
}

[type="checkbox"]:disabled {
  border-color: lightgray;
  opacity: 0.7;
  cursor: not-allowed;
}

[type="checkbox"]:disabled:before {
  background-color: lightgray;
}

[type="checkbox"]:disabled + span {
  opacity: 0.7;
  cursor: not-allowed;
}

[type="checkbox"]:focus-visible {
  outline-offset: max(2px, 0.1em);
  outline: max(2px, 0.1em) solid tomato;
}

[type="checkbox"]:enabled:hover {
  box-shadow: 0 0 0 max(4px, 0.2em) lightgray;
}